pipeline {
    agent any
    
    stages {
        stage('Checkout') {
            steps {
                git url: 'https://github.com/vitaliy-nick/InInfSys.git', branch: 'main'
            }
        }
        
        stage('Installing NPM (if needed)') {
            steps {
               
 sh '''
                    if ! command -v npm &> /dev/null
                    then
                        sudo apt-get update
                        sudo apt-get install -y npm
                    else
                        echo "npm already installed"
                    fi
                '''
            }
        }
        
        stage('Installing dependencies') {
            steps {
               sh 'npm install'
            }
        }
        
        stage('Running dev server (test only)') {
            steps {
                    sh '''
                        nohup npm run dev > dev.log 2>&1 &
                        DEV_PID=$!
                        sleep 10
                        kill $DEV_PID
                        echo 'Dev server started and stopped successfully.'
                    '''
            }
        }
        
        stage('SonarQube analysis') {
            steps {
                script {
                    def scannerHome = tool 'Scanner_lab11'
                    withSonarQubeEnv('SonarQube_lab11') {
                            sh "${scannerHome}/bin/sonar-scanner"
                    
                    }
                }
            }
        }
        
        stage('Wait for SonarQube Quality Gate') {
            steps {
                timeout(time: 1, unit: 'MINUTES') {
                    waitForQualityGate abortPipeline: true
                }
            }
        }
    }
    
    post {
        success {
            echo "Pipeline completed successfully"
        }
        failure {
            echo "Pipeline failed"
        }
    }
}

